{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBAAkBC,UAAWF,SAASC,cAAc,iBACvFE,YAAaH,SAASC,cAAc,mBACpCG,KAAMJ,SAASC,cAAc,UAoBzBI,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAIPT,EAAKM,KAAKW,iBAAiB,UA/BH,SAACC,GACvBA,EAAEC,iBAIF,IAHA,IAAMC,EAAkBC,SAASrB,EAAKK,YAAYiB,OAAcC,EAAaF,SAASrB,EAAKC,WAAWqB,OAChGE,EAAOH,SAASrB,EAAKI,UAAUkB,OACjCG,EAAQF,EACHG,EAAI,EAAGA,GAAKN,EAAiBM,GAAK,EACzCnB,EAAcmB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEgB,GAASD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayInput: document.querySelector('[name=\"delay\"]'),stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nconst handlerOnSubmit = (e) => {\n  e.preventDefault();\n  const amountOfPromise = parseInt(refs.amountInput.value); const startDelay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  let delay = startDelay;\n  for (let i = 1; i <= amountOfPromise; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  };\n};\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      }\n      else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nrefs.form.addEventListener('submit', handlerOnSubmit);\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInput","document","querySelector","stepInput","amountInput","form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amountOfPromise","parseInt","value","startDelay","step","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9993f09d.js.map"}